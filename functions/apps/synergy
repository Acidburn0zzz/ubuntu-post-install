#!/bin/bash

# Download function for ease of reuse
function install_synergy {
	# Install
	display_info 'Downloading '$NAME' version '$VERSION'...'
	# Download Debian file that matches system architecture
	case `uname -i` in
		i386|i486|i586|i686)
			curl -O https://binaries.symless.com/v${VERSION}/synergy-v${VERSION}-stable-${BUILD}-Linux-i686.deb

			;;
		x86_64)
			curl -O https://binaries.symless.com/v${VERSION}/synergy-v${VERSION}-stable-${BUILD}-Linux-x86_64.deb
			;;
		*)
			whiptail --title "No remote packages available to download." --msgbox "Error." 8 78
			;;
	esac
	# Install package(s)
	display_info 'Installing '$NAME'...'
	display_warning 'Requires admin privileges'
	$SUDOCMD dpkg -i ${PACKAGE}*.deb
	$SUDOCMD apt install -fy
	# Cleanup and finishh
	rm ${PACKAGE}*.deb
	display_success 'Done.'
}


# Synergy
function synergy {
	# Variables
	PACKAGE=synergy
	VERSION=1.8.8
	BUILD=25a8cb2
	NAME="Synergy"
	# Install
	display_header 'Begin '$NAME' installation'
	# Check if already installed
	display_info 'Checking if '$NAME' already installed...'
	PKGCHECK=$(dpkg-query -W --showformat='${Status}\n' $PACKAGE | grep "install ok installed")
	VERSCHECK=$(dpkg-query -W --showformat='${Version}\n' $PACKAGE)
	if [ "" == "$PKGCHECK" ]; then
		display_info $NAME 'is not installed.'
		echo 'Proceeding'
		install_synergy
		whiptail --title "Finished" --msgbox "Installation $NAME complete." 8 78
		thirdparty
	else
		if [ "$BUILD" == "$VERSCHECK" ]; then
			# Already installed
			display_success $NAME 'already installed.'
			whiptail --title "Finished" --msgbox "$NAME is already installed." 8 78
			thirdparty
		else
			# Update
			display_info $NAME '$NAME is already installed, but out-of-date.'
			display_info 'Updating '$NAME'...'
			# Install
			install_synergy
			whiptail --title "Finished" --msgbox "Updating of $NAME complete." 8 78
			thirdparty
		fi
	fi
}