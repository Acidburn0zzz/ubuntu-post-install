#!/bin/bash

# Plex
function plex {
	# Variables
	NAME="Plex"
	PACKAGE=plexmediaserver
	LIST=plexmediaserver.list
	KEY='https://downloads.plex.tv/plex-keys/PlexSign.key'
	REPO='deb https://downloads.plex.tv/repo/deb ./public main'
	# Install
	display_header 'Begin '$NAME' installation'
	# Check if already installed
	display_info 'Checking if '$NAME' already installed...'
	PKGCHECK=$(dpkg-query -W --showformat='${Status}\n' $PACKAGE|grep "install ok installed")
	if [ "" == "$PKGCHECK" ]; then
		display_info $NAME 'is not installed.'
		echo 'Proceeding'
		# Check if repository already exists
		display_info 'Checking if '$NAME' repository is already added...'
		if [ ! -f /etc/apt/sources.list.d/${LIST} ]; then
			# Add the repository signing key to be able to verify downloaded packages
			display_info 'Adding '$NAME' signing key to keyring...'
			display_warning 'Requires admin privileges'
			# Download Key
			$SUDOCMD curl -L $KEY | $SUDOCMD apt-key add -
			# Done
			display_success 'Done.'
			# Add the repository
			display_info 'Adding '$NAME' repository to software sources...'
			display_warning 'Requires admin privileges'
			# Write repository to apt sources list file
			echo $REPO | $SUDOCMD tee /etc/apt/sources.list.d/${LIST}
			# Update repository information
			display_info 'Updating repository information...'
			$SUDOCMD apt update -y
			display_success 'Done.'
		else
			display_info $NAME 'repository already in software sources.'
		fi
		# Install
		display_info 'Installing '$NAME'...'
		$SUDOCMD apt install -y $PACKAGE
		# Done
		display_success 'Done.'
		whiptail --title "Finished" --msgbox "Installation of $NAME complete." 8 78
		thirdparty
	else
		# Already installed
		display_success $NAME 'already installed.'
		whiptail --title "Finished" --msgbox "$NAME is already installed." 8 78
		thirdparty
	fi
}