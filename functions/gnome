#!/bin/bash

# Add GNOME PPA
function upgrade_gnome {
	PPA=ppa:gnome3-team/gnome3
	echo_message title "Starting 'upgrade_gnome' function..."
	# Add repository
	echo_message info 'Adding GNOME3 PPA to software sources...'
	# Admin privileges
	elevate_privilege "add-apt-repository -y $PPA"
	# Update repository information
	echo_message info 'Updating repository information...'
	# Admin privileges
	elevate_privilege "apt update -y"
	echo_message success 'Done.'
	# Upgrade GNOME
	echo_message info 'Upgrading GNOME software...'
	# Admin privileges
	elevate_privilege "apt dist-upgrade -y"
	echo_message success "Upgrade complete."
	gnome
}

# Install GNOME Desktop
function install_gnome_desktop {
	echo_message title "Starting 'install_gnome_desktop' function..."
	# Check list
	GNOMEDESKTOP=$(dirname "$0")'/data/gnome-desktop.list'
	# Draw window
	if (eval `resize` && whiptail \
		--title "GNOME Desktop" \
		--yesno "Packages to install for a basic GNOME desktop: \n\n$(for LINE in $(cat $GNOMEDESKTOP); do echo '  '$LINE; done) \n\nProceed with installation?" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		--scrolltext) then
		# Install loop
		echo_message info 'Installing GNOME desktop...'
		for PACKAGE in $(cat $GNOMEDESKTOP); do
			# Check if package is installed
			check_packages $PACKAGE
			EXITSTATUS=$?
			# If package is not installed
			if [ $EXITSTATUS = 1 ]; then
				# Install package
				echo_message info "'$PACKAGE' is not installed. Installing..."
				# Admin privileges
				elevate_privilege "apt install -y --no-install-recommends $PACKAGE"
				# Done
				echo_message success "'$PACKAGE' installation is complete."
			else
				# Show already installed message
				echo "Package '$PACKAGE' is installed."
			fi
		done
		# Finish
		echo_message success "Installation complete."
		whiptail --title "Finished" --msgbox "Installation complete." 8 64
		gnome
	else
		gnome
	fi
}

# Install GNOME Core Apps
function install_gnome_apps {
	echo_message title "Starting 'install_gnome_apps' function..."
	# Check list
	GNOMEAPPS=$(dirname "$0")'/data/gnome-apps.list'
	# Draw window
	if (eval `resize` && whiptail \
		--title "GNOME Core Apps" \
		--yesno "Current list of GNOME core apps: \n\n$(for LINE in $(cat $GNOMEAPPS); do echo '  '$LINE; done) \n\nWould you like to install these apps?" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		--scrolltext ) then
		# Install loop
		echo_message info 'Installing GNOME core apps...'
		for PACKAGE in $(cat $GNOMEAPPS); do
			# Check if package is installed
			check_packages $PACKAGE
			EXITSTATUS=$?
			# If package is not installed
			if [ $EXITSTATUS = 1 ]; then
				# Install package
				echo_message info "'$PACKAGE' is not installed. Installing..."
				# Admin privileges
				elevate_privilege "apt install -y --no-install-recommends $PACKAGE"
				# Done
				echo_message success "'$PACKAGE' installation is complete."
			else
				# Show already installed message
				echo "Package '$PACKAGE' is installed."
			fi
		done
		# Finish
		echo_message success "Installation complete."
		whiptail --title "Finished" --msgbox "GNOME Apps are installed complete." 8 64
		gnome
	else
		gnome
	fi
}

# GNOME
function gnome {
	echo_message title "Starting 'gnome' function..."
	# check exit status
	EXITSTATUS=$?
	if [ $EXITSTATUS = 0 ]; then
		# Draw window
		$(eval `resize` && whiptail \
		--notags \
		--title "Install Latest GNOME" \
		--menu "\nWhat would you like to do?" \
		--cancel-button "Go Back" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		upgrade_gnome			'Update to latest GNOME' \
		install_gnome_desktop	'Install basic GNOME desktop' \
		install_gnome_apps		'Install GNOME core applications' \
		3>&1 1>&2 2>&3)
	else
		main
	fi
}